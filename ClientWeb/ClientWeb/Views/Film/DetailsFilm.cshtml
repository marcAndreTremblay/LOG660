@model ClientWeb.ViewModel.FilmViewModel
@{
    ViewBag.Title = "DetailsFilm";
}
<script>
    $(function () {
        //$(("#dialog").dialog({ height: 'auto', width: 'auto' });
        $("#dialog").dialog({
            modal: true,
            width: 'auto',
            autoResize: true,
            resizable: true,

            autoOpen: false,
            show: {
                effect: "blind",
                duration: 100
            },
            hide: {
                effect: "explode",
                duration: 100
            }
        });

        $(".opener").on("click", function () {
            $(".ui-dialog-title").text($(this).attr("titre").valueOf());
            $("#dialog").dialog("option", "maxHeight", 1000);
            $("#dialog").html("Date de naissance: " + $(this).attr("dateNaissance").valueOf() + "<br />Lieu de naissance: " + $(this).attr("lieuNaissance").valueOf() + "<br />Biographie: " + $(this).attr("biographie").valueOf());
            $("#dialog").dialog("open");
        });
    });
</script>
<h2>DetailsFilm</h2>

<div>
    <h4>Film</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Film.Titre)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Film.Titre)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Film.AnneeSortie)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Film.AnneeSortie)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Film.LangueOriginale)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Film.LangueOriginale)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Film.DureeMinutes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Film.DureeMinutes)
        </dd>

        @if (Model.Film.Scenaristes != null)
        {
            <dt>
                Scénariste(s)
            </dt>

            foreach (var item in Model.Film.Scenaristes)
            {
                <dd>
                    @Html.DisplayFor(modelItem => item.Nom)
                </dd>
            }
        }
        else
        {
            <dt>
                Aucun Scénariste
            </dt>
            <dd></dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.Film.Pays)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Film.Pays)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Film.Genres)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Film.Genres)
        </dd>

        <dt>
            Réalisateur
        </dt>

        <dd class="opener" titre="@Model.Film.Realisateurs.ToArray()[0].Personne.Prenom @Model.Film.Realisateurs.ToArray()[0].Personne.NomFamille - Réalisateur" dateNaissance="@Model.Film.Realisateurs.ToArray()[0].Personne.DateNaissance.ToString("dddd le dd MMMM yyyy")" lieuNaissance="@Model.Film.Realisateurs.ToArray()[0].Personne.LieuNaissance" biographie="@Model.Film.Realisateurs.ToArray()[0].Personne.Biographie">
            @Html.DisplayFor(model => model.Film.Realisateurs.ToArray()[0].Personne.Prenom) @Html.DisplayFor(model => model.Film.Realisateurs.ToArray()[0].Personne.NomFamille)
        </dd>

        @if (Model.Film.FilmActeurs != null)
            {
            <dt>
                Acteurs
            </dt>

            foreach (var item in Model.Film.FilmActeurs)
            {
                <dd class="opener" titre="@item.Personne.Prenom @item.Personne.NomFamille - Acteur" dateNaissance="@item.Personne.DateNaissance.ToString("dddd le dd MMMM yyyy")" lieuNaissance="@item.Personne.LieuNaissance" biographie="@item.Personne.Biographie">
                    @Html.DisplayFor(modelItem => item.Personne.Prenom) @Html.DisplayFor(modelItem => item.Personne.NomFamille)- jouant @Html.DisplayFor(modelItem => item.Personnage)
                </dd>
            }
        }
        else
        {
            <dt>
                Aucun Acteur
            </dt>
        <dd></dd>
        }
        <dt>
            @Html.DisplayNameFor(model => model.Film.Resume)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Film.Resume)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Film.NbCopieRestante)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Film.NbCopieRestante)
        </dd>
    </dl>

    @if (Model.Client.Forfait.LocationMax <= Model.Client.GetNbLocationsEnCours())
    {
        <p>Impossible de louer le film, car on possède deja @Model.Client.GetNbLocationsEnCours() locations en cours alors que notre forfait nous en permet seulement @Model.Client.Forfait.LocationMax</p>
    }
    else if (Model.Film.NbCopieRestante < 1)
    {
        <p>Impossible de louer le film car il n'en reste plus</p>
    }
    else
    {
        @Html.ActionLink("Louer le film", "ListeFilm")
    }
</div>
<p>
    @Html.ActionLink("Revenir à la recherche", "ListeFilm")
</p>
<div id="dialog" title="Erreur">
    <p>Il y a probablement une erreur</p>
</div>